<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<help>
  <comment>&lt;p&gt;No description for this element&lt;/p&gt;</comment>
  <methods>
    <method name='pretty_print'>&lt;p&gt;A default pretty printing method for general objects. It calls #pretty_print_instance_variables to list instance variables.&lt;/p&gt;&lt;p&gt;If &lt;tt&gt;self&lt;/tt&gt; has a customized (redefined) #inspect method, the result of self.inspect is used but it obviously has no line break hints.&lt;/p&gt;&lt;p&gt;This module provides predefined #pretty_print methods for some of the most commonly used built-in classes for convenience.&lt;/p&gt;</method>
    <method name='pretty_print_cycle'>&lt;p&gt;A default pretty printing method for general objects that are detected as part of a cycle.&lt;/p&gt;</method>
    <method name='pretty_print_inspect'>&lt;p&gt;Is #inspect implementation using #pretty_print. If you implement #pretty_print, it can be used as follows.&lt;/p&gt;&lt;pre&gt;  alias inspect pretty_print_inspect
&lt;/pre&gt;&lt;p&gt;However, doing this requires that every class that #inspect is called on implement #pretty_print, or a RuntimeError will be raised.&lt;/p&gt;</method>
    <method name='pretty_print_instance_variables'>&lt;p&gt;Returns a sorted array of instance variable names.&lt;/p&gt;&lt;p&gt;This method should return an array of names of instance variables as symbols or strings as: +[:@a, :@b]+.&lt;/p&gt;</method>
  </methods>
</help>