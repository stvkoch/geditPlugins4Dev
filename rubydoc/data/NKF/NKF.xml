<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<help>
  <comment>&lt;p&gt;NKF - Ruby extension for Network Kanji Filter&lt;/p&gt;&lt;h2&gt;Description&lt;/h2&gt;&lt;p&gt;This is a Ruby Extension version of nkf (Netowrk Kanji Filter). It converts the first argument and return converted result. Conversion details are specified by flags as the first argument.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Nkf&lt;/b&gt; is a yet another kanji code converter among networks, hosts and terminals. It converts input kanji code to designated kanji code such as ISO-2022-JP, Shift_JIS, EUC-JP, UTF-8 or UTF-16.&lt;/p&gt;&lt;p&gt;One of the most unique faculty of &lt;b&gt;nkf&lt;/b&gt; is the guess of the input kanji encodings. It currently recognizes ISO-2022-JP, Shift_JIS, EUC-JP, UTF-8 and UTF-16. So users needn&apos;t set the input kanji code explicitly.&lt;/p&gt;&lt;p&gt;By default, X0201 kana is converted into X0208 kana. For X0201 kana, SO/SI, SSO and ESC-(-I methods are supported. For automatic code detection, nkf assumes no X0201 kana in Shift_JIS. To accept X0201 in Shift_JIS, use &lt;b&gt;-X&lt;/b&gt;, &lt;b&gt;-x&lt;/b&gt; or &lt;b&gt;-S&lt;/b&gt;.&lt;/p&gt;&lt;h2&gt;Flags&lt;/h2&gt;&lt;h3&gt;-b -u&lt;/h3&gt;&lt;p&gt;Output is buffered (DEFAULT), Output is unbuffered.&lt;/p&gt;&lt;h3&gt;-j -s -e -w -w16&lt;/h3&gt;&lt;p&gt;Output code is ISO-2022-JP (7bit JIS), Shift_JIS, EUC-JP, UTF-8N, UTF-16BE. Without this option and compile option, ISO-2022-JP is assumed.&lt;/p&gt;&lt;h3&gt;-J -S -E -W -W16&lt;/h3&gt;&lt;p&gt;Input assumption is JIS 7 bit, Shift_JIS, EUC-JP, UTF-8, UTF-16LE.&lt;/p&gt;&lt;h4&gt;-J&lt;/h4&gt;&lt;p&gt;Assume JIS input. It also accepts EUC-JP. This is the default. This flag does not exclude Shift_JIS.&lt;/p&gt;&lt;h4&gt;-S&lt;/h4&gt;&lt;p&gt;Assume Shift_JIS and X0201 kana input. It also accepts JIS. EUC-JP is recognized as X0201 kana. Without &lt;b&gt;-x&lt;/b&gt; flag, X0201 kana (halfwidth kana) is converted into X0208.&lt;/p&gt;&lt;h4&gt;-E&lt;/h4&gt;&lt;p&gt;Assume EUC-JP input. It also accepts JIS. Same as -J.&lt;/p&gt;&lt;h3&gt;-t&lt;/h3&gt;&lt;p&gt;No conversion.&lt;/p&gt;&lt;h3&gt;-i_&lt;/h3&gt;&lt;p&gt;Output sequence to designate JIS-kanji. (DEFAULT B)&lt;/p&gt;&lt;h3&gt;-o_&lt;/h3&gt;&lt;p&gt;Output sequence to designate ASCII. (DEFAULT B)&lt;/p&gt;&lt;h3&gt;-r&lt;/h3&gt;&lt;p&gt;{de/en}crypt ROT13/47&lt;/p&gt;&lt;h3&gt;-h[123] --hiragana --katakana --katakana-hiragana&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Katakana to Hiragana conversion.&lt;/li&gt;&lt;li&gt;Hiragana to Katakana conversion.&lt;/li&gt;&lt;li&gt;Katakana to Hiragana and Hiragana to Katakana conversion.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;-T&lt;/h3&gt;&lt;p&gt;Text mode output (MS-DOS)&lt;/p&gt;&lt;h3&gt;-l&lt;/h3&gt;&lt;p&gt;ISO8859-1 (Latin-1) support&lt;/p&gt;&lt;h3&gt;-f[&lt;tt&gt;m&lt;/tt&gt; [- &lt;tt&gt;n&lt;/tt&gt;]]&lt;/h3&gt;&lt;p&gt;Folding on &lt;tt&gt;m&lt;/tt&gt; length with &lt;tt&gt;n&lt;/tt&gt; margin in a line. Without this option, fold length is 60 and fold margin is 10.&lt;/p&gt;&lt;h3&gt;-F&lt;/h3&gt;&lt;p&gt;New line preserving line folding.&lt;/p&gt;&lt;h3&gt;-Z[0-3]&lt;/h3&gt;&lt;p&gt;Convert X0208 alphabet (Fullwidth Alphabets) to ASCII.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Convert X0208 alphabet to ASCII.&lt;/li&gt;&lt;li&gt;Converts X0208 kankaku to single ASCII space.&lt;/li&gt;&lt;li&gt;Converts X0208 kankaku to double ASCII spaces.&lt;/li&gt;&lt;li&gt;Replacing Fullwidth &gt;, &lt;, &quot;, &amp; into &apos;&amp;gt;&apos;, &apos;&amp;lt;&apos;, &apos;&amp;quot;&apos;, &apos;&amp;amp;&apos; as in HTML.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;-X -x&lt;/h3&gt;&lt;p&gt;Assume X0201 kana in MS-Kanji. With &lt;b&gt;-X&lt;/b&gt; or without this option, X0201 is converted into X0208 Kana. With &lt;b&gt;-x&lt;/b&gt;, try to preserve X0208 kana and do not convert X0201 kana to X0208. In JIS output, ESC-(-I is used. In EUC output, SSO is used.&lt;/p&gt;&lt;h3&gt;-B[0-2]&lt;/h3&gt;&lt;p&gt;Assume broken JIS-Kanji input, which lost ESC. Useful when your site is using old B-News Nihongo patch.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;allows any char after ESC-( or ESC-$.&lt;/li&gt;&lt;li&gt;forces ASCII after NL.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;-I&lt;/h3&gt;&lt;p&gt;Replacing non iso-2022-jp char into a geta character (substitute character in Japanese).&lt;/p&gt;&lt;h3&gt;-d -c&lt;/h3&gt;&lt;p&gt;Delete \r in line feed, Add \r in line feed.&lt;/p&gt;&lt;h3&gt;-m[BQN0]&lt;/h3&gt;&lt;p&gt;MIME ISO-2022-JP/ISO8859-1 decode. (DEFAULT) To see ISO8859-1 (Latin-1) -l is necessary.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Decode MIME base64 encoded stream. Remove header or other part before&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;conversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Decode MIME quoted stream. &apos;_&apos; in quoted stream is converted to space.&lt;/li&gt;&lt;li&gt;Non-strict decoding.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It allows line break in the middle of the base64 encoding.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;No MIME decode.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;-M&lt;/h3&gt;&lt;p&gt;MIME encode. Header style. All ASCII code and control characters are intact. Kanji conversion is performed before encoding, so this cannot be used as a picture encoder.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;MIME encode Base64 stream.&lt;/li&gt;&lt;li&gt;Perfome quoted encoding.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;-l&lt;/h3&gt;&lt;p&gt;Input and output code is ISO8859-1 (Latin-1) and ISO-2022-JP. &lt;b&gt;-s&lt;/b&gt;, &lt;b&gt;-e&lt;/b&gt; and &lt;b&gt;-x&lt;/b&gt; are not compatible with this option.&lt;/p&gt;&lt;h3&gt;-L[uwm]&lt;/h3&gt;&lt;p&gt;new line mode Without this option, nkf doesn&apos;t convert line breaks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;unix (LF)&lt;/li&gt;&lt;li&gt;windows (CRLF)&lt;/li&gt;&lt;li&gt;mac (CR)&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;--fj --unix --mac --msdos --windows&lt;/h3&gt;&lt;p&gt;convert for these system&lt;/p&gt;&lt;h3&gt;--jis --euc --sjis --mime --base64&lt;/h3&gt;&lt;p&gt;convert for named code&lt;/p&gt;&lt;h3&gt;--jis-input --euc-input --sjis-input --mime-input --base64-input&lt;/h3&gt;&lt;p&gt;assume input system&lt;/p&gt;&lt;h3&gt;--ic=&lt;tt&gt;input codeset&lt;/tt&gt; --oc=&lt;tt&gt;output codeset&lt;/tt&gt;&lt;/h3&gt;&lt;p&gt;Set the input or output codeset. NKF supports following codesets and those codeset name are case insensitive.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a.k.a. RFC1468, 7bit JIS, JUNET&lt;/li&gt;&lt;li&gt;a.k.a. AT&amp;T JIS, Japanese EUC, UJIS&lt;/li&gt;&lt;li&gt;a.k.a. x-eucjp-open-19970715-ascii&lt;/li&gt;&lt;li&gt;a.k.a. x-eucjp-open-19970715-ms&lt;/li&gt;&lt;li&gt;Microsoft Version of EUC-JP.&lt;/li&gt;&lt;li&gt;SJIS, MS-Kanji&lt;/li&gt;&lt;li&gt;a.k.a. Windows-31J&lt;/li&gt;&lt;li&gt;same as UTF-8N&lt;/li&gt;&lt;li&gt;UTF-8 without BOM&lt;/li&gt;&lt;li&gt;UTF-8 with BOM&lt;/li&gt;&lt;li&gt;same as UTF-16BE&lt;/li&gt;&lt;li&gt;UTF-16 Big Endian without BOM&lt;/li&gt;&lt;li&gt;UTF-16 Big Endian with BOM&lt;/li&gt;&lt;li&gt;UTF-16 Little Endian without BOM&lt;/li&gt;&lt;li&gt;UTF-16 Little Endian with BOM&lt;/li&gt;&lt;li&gt;NKDed UTF-8, a.k.a. UTF8-NFD (input only)&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;--fb-{skip, html, xml, perl, java, subchar}&lt;/h3&gt;&lt;p&gt;Specify the way that nkf handles unassigned characters. Without this option, --fb-skip is assumed.&lt;/p&gt;&lt;h3&gt;--prefix= &lt;tt&gt;escape character&lt;/tt&gt; &lt;tt&gt;target character&lt;/tt&gt; ..&lt;/h3&gt;&lt;p&gt;When nkf converts to Shift_JIS, nkf adds a specified escape character to specified 2nd byte of Shift_JIS characters. 1st byte of argument is the escape character and following bytes are target characters.&lt;/p&gt;&lt;h3&gt;--disable-cp932ext&lt;/h3&gt;&lt;p&gt;Handle the characters extended in CP932 as unassigned characters.&lt;/p&gt;&lt;h3&gt;--cap-input&lt;/h3&gt;&lt;p&gt;Decode hex encoded characters.&lt;/p&gt;&lt;h3&gt;--url-input&lt;/h3&gt;&lt;p&gt;Unescape percent escaped characters.&lt;/p&gt;&lt;h3&gt;--&lt;/h3&gt;&lt;p&gt;Ignore rest of -option.&lt;/p&gt;</comment>
  <methods>
    <method name='guess1'>&lt;p&gt;Returns guessed encoding of &lt;em&gt;str&lt;/em&gt; as integer.&lt;/p&gt;&lt;p&gt;Algorithm described in: Ken Lunde. `Understanding Japanese Information Processing&apos; Sebastopol, CA: O&apos;Reilly &amp; Associates.&lt;/p&gt;&lt;pre&gt;    case NKF.guess1(input)
    when NKF::JIS
      &quot;ISO-2022-JP&quot;
    when NKF::SJIS
      &quot;Shift_JIS&quot;
    when NKF::EUC
      &quot;EUC-JP&quot;
    when NKF::UNKNOWN
      &quot;UNKNOWN(ASCII)&quot;
    when NKF::BINARY
      &quot;BINARY&quot;
    end
&lt;/pre&gt;</method>
    <method name='guess2'>&lt;p&gt;Returns guessed encoding of &lt;em&gt;str&lt;/em&gt; as integer by nkf routine.&lt;/p&gt;&lt;pre&gt;   case NKF.guess(input)
   when NKF::ASCII
     &quot;ASCII&quot;
   when NKF::JIS
     &quot;ISO-2022-JP&quot;
   when NKF::SJIS
     &quot;Shift_JIS&quot;
   when NKF::EUC
     &quot;EUC-JP&quot;
   when NKF::UTF8
     &quot;UTF-8&quot;
   when NKF::UTF16
     &quot;UTF-16&quot;
   when NKF::UNKNOWN
     &quot;UNKNOWN&quot;
   when NKF::BINARY
     &quot;BINARY&quot;
   end
&lt;/pre&gt;</method>
    <method name='nkf'>&lt;p&gt;Convert &lt;em&gt;str&lt;/em&gt; and return converted result. Conversion details are specified by &lt;em&gt;opt&lt;/em&gt; as String.&lt;/p&gt;&lt;pre&gt;   require &apos;nkf&apos;
   output = NKF.nkf(&quot;-s&quot;, input)
&lt;/pre&gt;&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; By default, nkf decodes MIME encoded string. If you want not to decode input, use NKF.nkf with &lt;b&gt;-m0&lt;/b&gt; flag.&lt;/p&gt;</method>
  </methods>
</help>