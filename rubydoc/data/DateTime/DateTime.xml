<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<help>
  <comment>&lt;p&gt;Class representing a date and time.&lt;/p&gt;&lt;p&gt;See the documentation to the file date.rb for an overview.&lt;/p&gt;&lt;p&gt;DateTime objects are immutable once created.&lt;/p&gt;&lt;h2&gt;Other methods.&lt;/h2&gt;&lt;p&gt;The following methods are defined in Date, but declared private there. They are made public in DateTime. They are documented here.&lt;/p&gt;&lt;h3&gt;hour()&lt;/h3&gt;&lt;p&gt;Get the hour-of-the-day of the time. This is given using the 24-hour clock, counting from midnight. The first hour after midnight is hour 0; the last hour of the day is hour 23.&lt;/p&gt;&lt;h3&gt;min()&lt;/h3&gt;&lt;p&gt;Get the minute-of-the-hour of the time.&lt;/p&gt;&lt;h3&gt;sec()&lt;/h3&gt;&lt;p&gt;Get the second-of-the-minute of the time.&lt;/p&gt;&lt;h3&gt;sec_fraction()&lt;/h3&gt;&lt;p&gt;Get the fraction of a second of the time. This is returned as a &lt;tt&gt;Rational&lt;/tt&gt;.&lt;/p&gt;&lt;h3&gt;zone()&lt;/h3&gt;&lt;p&gt;Get the time zone as a String. This is representation of the time offset such as &quot;+1000&quot;, not the true time-zone name.&lt;/p&gt;&lt;h3&gt;offset()&lt;/h3&gt;&lt;p&gt;Get the time zone offset as a fraction of a day. This is returned as a &lt;tt&gt;Rational&lt;/tt&gt;.&lt;/p&gt;&lt;h3&gt;new_offset(of=0)&lt;/h3&gt;&lt;p&gt;Create a new DateTime object, identical to the current one, except with a new time zone offset of &lt;tt&gt;of&lt;/tt&gt;. &lt;tt&gt;of&lt;/tt&gt; is the new offset from UTC as a fraction of a day.&lt;/p&gt;</comment>
  <methods>
    <method name='_strptime'>&lt;p&gt;No description for this element&lt;/p&gt;</method>
    <method name='civil'>&lt;p&gt;Create a new DateTime object corresponding to the specified Civil Date and hour &lt;tt&gt;h&lt;/tt&gt;, minute &lt;tt&gt;min&lt;/tt&gt;, second &lt;tt&gt;s&lt;/tt&gt;.&lt;/p&gt;&lt;p&gt;The 24-hour clock is used. Negative values of &lt;tt&gt;h&lt;/tt&gt;, &lt;tt&gt;min&lt;/tt&gt;, and &lt;tt&gt;sec&lt;/tt&gt; are treating as counting backwards from the end of the next larger unit (e.g. a &lt;tt&gt;min&lt;/tt&gt; of -2 is treated as 58). No wraparound is performed. If an invalid time portion is specified, an ArgumentError is raised.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;of&lt;/tt&gt; is the offset from UTC as a fraction of a day (defaults to 0). &lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;y&lt;/tt&gt; defaults to -4712, &lt;tt&gt;m&lt;/tt&gt; to 1, and &lt;tt&gt;d&lt;/tt&gt; to 1; this is Julian Day Number day 0. The time values default to 0.&lt;/p&gt;</method>
    <method name='commercial'>&lt;p&gt;Create a new DateTime object corresponding to the specified Commercial Date and hour &lt;tt&gt;h&lt;/tt&gt;, minute &lt;tt&gt;min&lt;/tt&gt;, second &lt;tt&gt;s&lt;/tt&gt;.&lt;/p&gt;&lt;p&gt;The 24-hour clock is used. Negative values of &lt;tt&gt;h&lt;/tt&gt;, &lt;tt&gt;min&lt;/tt&gt;, and &lt;tt&gt;sec&lt;/tt&gt; are treating as counting backwards from the end of the next larger unit (e.g. a &lt;tt&gt;min&lt;/tt&gt; of -2 is treated as 58). No wraparound is performed. If an invalid time portion is specified, an ArgumentError is raised.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;of&lt;/tt&gt; is the offset from UTC as a fraction of a day (defaults to 0). &lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;y&lt;/tt&gt; defaults to 1582, &lt;tt&gt;w&lt;/tt&gt; to 41, and &lt;tt&gt;d&lt;/tt&gt; to 5; this is the Day of Calendar Reform for Italy and the Catholic countries. The time values default to 0.&lt;/p&gt;</method>
    <method name='jd'>&lt;p&gt;Create a new DateTime object corresponding to the specified Julian Day Number &lt;tt&gt;jd&lt;/tt&gt; and hour &lt;tt&gt;h&lt;/tt&gt;, minute &lt;tt&gt;min&lt;/tt&gt;, second &lt;tt&gt;s&lt;/tt&gt;.&lt;/p&gt;&lt;p&gt;The 24-hour clock is used. Negative values of &lt;tt&gt;h&lt;/tt&gt;, &lt;tt&gt;min&lt;/tt&gt;, and &lt;tt&gt;sec&lt;/tt&gt; are treating as counting backwards from the end of the next larger unit (e.g. a &lt;tt&gt;min&lt;/tt&gt; of -2 is treated as 58). No wraparound is performed. If an invalid time portion is specified, an ArgumentError is raised.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;of&lt;/tt&gt; is the offset from UTC as a fraction of a day (defaults to 0). &lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;&lt;p&gt;All day/time values default to 0.&lt;/p&gt;</method>
    <method name='now'>&lt;p&gt;Create a new DateTime object representing the current time.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;</method>
    <method name='ordinal'>&lt;p&gt;Create a new DateTime object corresponding to the specified Ordinal Date and hour &lt;tt&gt;h&lt;/tt&gt;, minute &lt;tt&gt;min&lt;/tt&gt;, second &lt;tt&gt;s&lt;/tt&gt;.&lt;/p&gt;&lt;p&gt;The 24-hour clock is used. Negative values of &lt;tt&gt;h&lt;/tt&gt;, &lt;tt&gt;min&lt;/tt&gt;, and &lt;tt&gt;sec&lt;/tt&gt; are treating as counting backwards from the end of the next larger unit (e.g. a &lt;tt&gt;min&lt;/tt&gt; of -2 is treated as 58). No wraparound is performed. If an invalid time portion is specified, an ArgumentError is raised.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;of&lt;/tt&gt; is the offset from UTC as a fraction of a day (defaults to 0). &lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;y&lt;/tt&gt; defaults to -4712, and &lt;tt&gt;d&lt;/tt&gt; to 1; this is Julian Day Number day 0. The time values default to 0.&lt;/p&gt;</method>
    <method name='parse'>&lt;p&gt;Create a new DateTime object by parsing from a String, without specifying the format.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;str&lt;/tt&gt; is a String holding a date-time representation. &lt;tt&gt;comp&lt;/tt&gt; specifies whether to interpret 2-digit years as 19XX (&gt;= 69) or 20XX (&lt; 69); the default is not to. The method will attempt to parse a date-time from the String using various heuristics; see #_parse in date/format.rb for more details. If parsing fails, an ArgumentError will be raised.&lt;/p&gt;&lt;p&gt;The default &lt;tt&gt;str&lt;/tt&gt; is &apos;-4712-01-01T00:00:00Z&apos;; this is Julian Day Number day 0.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;</method>
    <method name='strptime'>&lt;p&gt;Create a new DateTime object by parsing from a String according to a specified format.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;str&lt;/tt&gt; is a String holding a date-time representation. &lt;tt&gt;fmt&lt;/tt&gt; is the format that the date-time is in. See date/format.rb for details on supported formats.&lt;/p&gt;&lt;p&gt;The default &lt;tt&gt;str&lt;/tt&gt; is &apos;-4712-01-01T00:00:00Z&apos;, and the default &lt;tt&gt;fmt&lt;/tt&gt; is &apos;%FT%T%Z&apos;. This gives midnight on Julian Day Number day 0.&lt;/p&gt;&lt;p&gt;&lt;tt&gt;sg&lt;/tt&gt; specifies the Day of Calendar Reform.&lt;/p&gt;&lt;p&gt;An ArgumentError will be raised if &lt;tt&gt;str&lt;/tt&gt; cannot be parsed.&lt;/p&gt;</method>
    <method name='valid_time?'>&lt;p&gt;Do hour &lt;tt&gt;h&lt;/tt&gt;, minute &lt;tt&gt;min&lt;/tt&gt;, and second &lt;tt&gt;s&lt;/tt&gt; constitute a valid time?&lt;/p&gt;&lt;p&gt;If they do, returns their value as a fraction of a day. If not, returns nil.&lt;/p&gt;&lt;p&gt;The 24-hour clock is used. Negative values of &lt;tt&gt;h&lt;/tt&gt;, &lt;tt&gt;min&lt;/tt&gt;, and &lt;tt&gt;sec&lt;/tt&gt; are treating as counting backwards from the end of the next larger unit (e.g. a &lt;tt&gt;min&lt;/tt&gt; of -2 is treated as 58). No wraparound is performed.&lt;/p&gt;</method>
    <method name='strftime'>&lt;p&gt;No description for this element&lt;/p&gt;</method>
  </methods>
</help>