<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<help>
  <comment>&lt;p&gt;This is how you define the HTML that RDoc generates. Simply create a file in rdoc/generators/html_templates that creates the module RDoc::Page and populate it as described below. Then invoke rdoc using the --template &lt;name of your file&gt; option, and your template will be used.&lt;/p&gt;&lt;p&gt;The constants defining pages use a simple templating system:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The templating system is passed a hash. Keys in the hash correspond to tags on this page. The tag %abc% is looked up in the hash, and is replaced by the corresponding hash value.&lt;/li&gt;&lt;li&gt;Some tags are optional. You can detect this using IF/ENDIF&lt;/li&gt;&lt;pre&gt;   IF: title
   The value of title is %title%
   ENDIF: title
&lt;/pre&gt;&lt;li&gt;Some entries in the hash have values that are arrays, where each entry in the array is itself a hash. These are used to generate lists using the START: construct. For example, given a hash containing&lt;/li&gt;&lt;pre&gt;   { &apos;people&apos; =&gt; [ { &apos;name&apos; =&gt; &apos;Fred&apos;, &apos;age&apos; =&gt; &apos;12&apos; },
                   { &apos;name&apos; =&gt; &apos;Mary&apos;, &apos;age&apos; =&gt; &apos;21&apos; } ]
&lt;/pre&gt;&lt;p&gt;You could generate a simple table using&lt;/p&gt;&lt;pre&gt;   &lt;table&gt;
   START:people
     &lt;tr&gt;&lt;td&gt;%name%&lt;td&gt;%age%&lt;/tr&gt;
   END:people
   &lt;/table&gt;
&lt;/pre&gt;&lt;p&gt;These lists can be nested to an arbitrary depth&lt;/p&gt;&lt;li&gt;the construct HREF:url:name: generates &lt;a href=&quot;%url%&quot;&gt;%name%&lt;/a&gt; if &lt;tt&gt;url&lt;/tt&gt; is defined in the hash, or %name% otherwise.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Your file must contain the following constants&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a list of fonts to be used&lt;/li&gt;&lt;li&gt;a CSS section (without the &lt;style&gt; or comments). This is used to generate a style.css file&lt;/li&gt;&lt;li&gt;The main body of all non-index RDoc pages. BODY will contain two !INCLUDE!s. The first is used to include a document-type specific header (FILE_PAGE or CLASS_PAGE). The second include is for the method list (METHOD_LIST). THe body is passed:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;the page&apos;s title&lt;/li&gt;&lt;li&gt;the url of a style sheet for this page&lt;/li&gt;&lt;li&gt;the optional URL of a diagram for this page&lt;/li&gt;&lt;li&gt;a (potentially multi-paragraph) string containing the description for th file/class/module.&lt;/li&gt;&lt;li&gt;an optional list of %aref%/%name% pairs, one for each module required by this file.&lt;/li&gt;&lt;li&gt;an optional list of %aref%/%name%, one for each method documented on this page. This is intended to be an index.&lt;/li&gt;&lt;li&gt;An optional list. For each attribute it contains:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;the attribute name&lt;/li&gt;&lt;li&gt;r/o, w/o, or r/w&lt;/li&gt;&lt;li&gt;description of the attribute&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;An optional string containing an already-formatted list of classes and modules documented in this file&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For FILE_PAGE entries, the body will be passed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The name of the file&lt;/li&gt;&lt;li&gt;The full path to the file&lt;/li&gt;&lt;li&gt;The date/time the file was last changed&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For class and module pages, the body will be passed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The name of the class or module&lt;/li&gt;&lt;li&gt;A list. For each file this class is defined in, it contains:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;an (optional) URL of the RDoc page for this file&lt;/li&gt;&lt;li&gt;the name of the file&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;The (optional) URL of the RDoc page documenting this class&apos;s parent class&lt;/li&gt;&lt;li&gt;The name of this class&apos;s parent.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For both files and classes, the body is passed the following information on includes and methods:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Optional list of included modules. For each, it receives&lt;/li&gt;&lt;ul&gt;&lt;li&gt;optional URL to RDoc page for the module&lt;/li&gt;&lt;li&gt;the name of the module&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Optional list of methods of a particular class and category.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Each method list entry contains:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;public/private/protected&lt;/li&gt;&lt;li&gt;instance/class&lt;/li&gt;&lt;li&gt;a list of method descriptions&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Each method description contains:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a target aref, used when referencing this method description. You should code this as &lt;a name=&quot;%aref%&quot;&gt;&lt;/li&gt;&lt;li&gt;the optional URL to the page containing this method&apos;s source code.&lt;/li&gt;&lt;li&gt;the method&apos;s name&lt;/li&gt;&lt;li&gt;the method&apos;s parameters&lt;/li&gt;&lt;li&gt;a full calling sequence&lt;/li&gt;&lt;li&gt;the (potentially multi-paragraph) description of this method.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Header for pages documenting classes and modules. See BODY above for the available parameters.&lt;/li&gt;&lt;li&gt;Header for pages documenting files. See BODY above for the available parameters.&lt;/li&gt;&lt;li&gt;Controls the display of the listing of methods. See BODY for parameters.&lt;/li&gt;&lt;li&gt;The top-level index page. For a browser-like environment define a frame set that includes the file, class, and method indices. Passed&lt;/li&gt;&lt;ul&gt;&lt;li&gt;title of page&lt;/li&gt;&lt;li&gt;url of initial page to display&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Individual files for the three indexes. Passed:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;URL of main index page&lt;/li&gt;&lt;li&gt;List of&lt;/li&gt;&lt;ul&gt;&lt;li&gt;name of an index entry&lt;/li&gt;&lt;li&gt;url of corresponding page&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;Same as CLASS_INDEX for methods&lt;/li&gt;&lt;li&gt;Same as CLASS_INDEX for methods&lt;/li&gt;&lt;li&gt;A wrapper around CLASS_INDEX, METHOD_INDEX, and FILE_INDEX. If those index strings contain the complete HTML for the output, then FR_INDEX_BODY can simply be !INCLUDE!&lt;/li&gt;&lt;li&gt;Page used to display source code. Passed %title% and %code%, the latter being a multi-line string of code.&lt;/li&gt;&lt;/ul&gt;</comment>
  <methods>
    <method name='write_extra_pages'>&lt;p&gt;No description for this element&lt;/p&gt;</method>
  </methods>
</help>